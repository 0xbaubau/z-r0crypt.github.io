<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Security Notes</title>
    <link>https://z-r0crypt.github.io/post/</link>
    <description>Recent content in Posts on Security Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Feb 2020 16:52:36 -0500</lastBuildDate>
    
	<atom:link href="https://z-r0crypt.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cryptography I - Stanford University - Week 2 - part 2</title>
      <link>https://z-r0crypt.github.io/blog/2020/02/05/cryptography-i---stanford-university---week-2---part-2/</link>
      <pubDate>Wed, 05 Feb 2020 16:52:36 -0500</pubDate>
      
      <guid>https://z-r0crypt.github.io/blog/2020/02/05/cryptography-i---stanford-university---week-2---part-2/</guid>
      <description>Crypto notes - Stanford - Week 2  Using Block Ciphers  Modes of operation: One time key  #security-for-one-time-key ECB (Electronic Code Book) - One time key  Deterministic counter mode from a PRF F (eg. AES) - One time key   Modes of operation: Many time key (CBC)  Security for many-time key CBC (Cipher Block Chaining with a random IV) - Many time key (CPA security)  Modes of operation: Many time key (CTR)    Using Block Ciphers Modes of operation: One time key Goal: Build a secure encryption from a secure PRP</description>
    </item>
    
    <item>
      <title>Cryptography I - Stanford University - Week 2 - Part 1</title>
      <link>https://z-r0crypt.github.io/blog/2020/02/03/cryptography-i---stanford-university---week-2---part-1/</link>
      <pubDate>Mon, 03 Feb 2020 16:52:36 -0500</pubDate>
      
      <guid>https://z-r0crypt.github.io/blog/2020/02/03/cryptography-i---stanford-university---week-2---part-1/</guid>
      <description>Crypto notes - Stanford - Week 2  Block Ciphers  Pseudo Random Function (PRF) Pseudo Random Permutation (PRP) Secure PRF PRF =&amp;gt; PRG  Data Encryption Standard  DES: Core Idea - Feistel Network DES is a 16 round Feistel network  The Function F(k_i, x) S-boxes  Exhaustive search on DES Strengthening DES against ex. search  Method 1: Triple DES Method 2: DESX  Attacks on the implementation of the block ciphers  Side channel attacks Fault attacks Conclusion on implementation attacks  Attacks on block ciphers  Linear and differential attacks Quantum attacks   Advanced Encryption Standard (AES) Block Cipher  History Design How to use AES Attacks on AES  Building Block Ciphers from PRGs  Notes and Review    Block Ciphers A block cipher maps n bits of inputs to n bits of output.</description>
    </item>
    
    <item>
      <title>OSWE/AWAE Preparation</title>
      <link>https://z-r0crypt.github.io/blog/2020/01/22/oswe/awae-preparation/</link>
      <pubDate>Wed, 22 Jan 2020 22:10:36 -0500</pubDate>
      
      <guid>https://z-r0crypt.github.io/blog/2020/01/22/oswe/awae-preparation/</guid>
      <description>AWAE-Preparation This post contains all trainings and tutorials that could be useful for offensive security&amp;rsquo;s OSWE certification. I will be updating the post during my lab and preparation for the exam.
Course Syllabus: https://www.offensive-security.com/documentation/awae-syllabus.pdf
Before registering for AWAE:  Cross-Site Scripting:  XSS XMLHttpRequest Specification AtMail Email Server Appliance 6.4 - Persistent Cross-Site Scripting Persistent XSS Hijack Session using socat   XSS and MySQL  PentesterLab: XSS and MySQL FILE  https://www.</description>
    </item>
    
    <item>
      <title>Microcorruption CTF - Tutorial</title>
      <link>https://z-r0crypt.github.io/blog/2019/11/25/microcorruption-ctf---tutorial/</link>
      <pubDate>Mon, 25 Nov 2019 22:10:36 -0500</pubDate>
      
      <guid>https://z-r0crypt.github.io/blog/2019/11/25/microcorruption-ctf---tutorial/</guid>
      <description>Introduction In this post I will share my learnings and research work done during microcorruption CTF challenge.
What is Microcorruption? It&amp;rsquo;s an embedded security CTF challenge where you are given a debugger and a device (a smart lock), you will be given different levels of challenges to unlock the device, find flgs, find code vulnerabilitys, memory corruption bugs etc.
You&amp;rsquo;ll use the debugger to reverse-engineer the code for each level.</description>
    </item>
    
    <item>
      <title>Cryptography I - Stanford University - Week 1</title>
      <link>https://z-r0crypt.github.io/blog/2019/11/24/cryptography-i---stanford-university---week-1/</link>
      <pubDate>Sun, 24 Nov 2019 16:52:36 -0500</pubDate>
      
      <guid>https://z-r0crypt.github.io/blog/2019/11/24/cryptography-i---stanford-university---week-1/</guid>
      <description>Week 1. This week&amp;rsquo;s topic is an overview of what cryptography is about as well as our first example ciphers. You will learn about pseudo-randomness and how to use it for encryption. We will also look at a few basic definitions of secure encryption.
 History Discrete Probability  Birthday paradox  Stream Ciphers  Information theoretic security  Stream Ciphers PRG Attacks on OTP / stream ciphers Modern broken stream ciphers Better modern stream cipher Letâ€™s do some Salsa!</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://z-r0crypt.github.io/blog/2019/11/11/introduction/</link>
      <pubDate>Mon, 11 Nov 2019 14:59:36 -0500</pubDate>
      
      <guid>https://z-r0crypt.github.io/blog/2019/11/11/introduction/</guid>
      <description>Welcome!
In this site I will be sharing my learning and experiences i gained during a pentest, a CTF, wargame or any security challenges, basically everything i learn or want to learn. Hoping to help someone in similar situations and get feedback from you!</description>
    </item>
    
  </channel>
</rss>